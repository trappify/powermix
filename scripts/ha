#!/usr/bin/env bash
set -euo pipefail

ROOT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")"/.. && pwd)"
export HA_UID="${HA_UID:-$(id -u)}"
export HA_GID="${HA_GID:-$(id -g)}"
HA_DIR="${ROOT_DIR}/ha_dev"
CONFIG_DIR="${HA_DIR}/config"
TEMPLATE_DIR="${HA_DIR}/template_config"

bootstrap_config() {
    if [[ ! -d "${CONFIG_DIR}" ]]; then
        mkdir -p "${CONFIG_DIR}"
    fi
    if [[ ! -f "${CONFIG_DIR}/configuration.yaml" ]]; then
        echo "Bootstrapping Home Assistant config from template..."
        rm -rf "${CONFIG_DIR:?}/"*
        cp -R "${TEMPLATE_DIR}/." "${CONFIG_DIR}/"
        chown -R "$(id -u)":"$(id -g)" "${CONFIG_DIR}"
    fi
}

case "${1:-}" in
    up)
        bootstrap_config
        ;;
    reset)
        rm -rf "${CONFIG_DIR}"
        mkdir -p "${CONFIG_DIR}"
        bootstrap_config
        echo "Config reset to template."
        exit 0
        ;;
esac

cd "${HA_DIR}"

subcommand="${1:-up}"
shift || true

case "${subcommand}" in
  up)
    exec docker compose up "$@"
    ;;
  down)
    exec docker compose down "$@"
    ;;
  logs)
    exec docker compose logs -f "$@"
    ;;
  *)
    echo "Usage: scripts/ha {up|down|logs} [extra docker compose args]" >&2
    exit 1
    ;;
 esac
